# Configuration for code-server in Devant
worker_processes  auto;  # Use auto to match CPU cores
pid        /tmp/nginx.pid;

# Set user explicitly to match Devant's user
# Comment this out if you want to run as the default container user
user 10500 10500;

events { 
    worker_connections 1024; 
    # Accept as many connections as possible
    multi_accept on;
}

http {
    include    mime.types;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    
    # Simple log format suitable for stdout/stderr
    # log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    #                 '$status $body_bytes_sent "$http_referer" '
    #                 '"$http_user_agent" "$http_x_forwarded_for" '
    #                 'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time" '
    #                 'upgrade="$http_upgrade" connection="$http_connection"';

    # Temporary paths for Devant's read-only filesystem
    client_body_temp_path /tmp/client_temp;
    proxy_temp_path       /tmp/proxy_temp_path;
    fastcgi_temp_path     /tmp/fastcgi_temp;
    uwsgi_temp_path       /tmp/uwsgi_temp;
    scgi_temp_path        /tmp/scgi_temp;

    # Log to files in /tmp and to stdout/stderr for container logs
    # access_log /tmp/nginx/logs/access.log main;
    # access_log /dev/stdout main;
    # error_log /tmp/nginx/logs/error.log debug;
    # error_log /dev/stderr debug;  # Set to debug for more verbose logging

    # WebSocket support - more robust mapping
    map $http_upgrade $connection_upgrade {
        websocket upgrade;
        default close;
    }

    server {
        listen 8443 default_server;  # Match the exposed port in Dockerfile
        listen [::]:8443 default_server;
        server_name _;  # Accept any hostname for dynamic assignment

        # Basic settings
        client_max_body_size 50M;  # Increased for larger uploads
        
        # Global proxy settings for all locations
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Longer timeouts for WebSocket connections
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
        proxy_connect_timeout 300s;
        
        # Disable buffering for smoother WebSocket streaming
        proxy_buffering off;
        
        # Main proxy settings for code-server
        location / {
            proxy_pass http://127.0.0.1:8080;
            
            # WebSocket support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            proxy_set_header Origin "";

            # Optional: Set permissive CORS response headers
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Credentials true always;
        }

        # Special handling for WebSocket connections to /stable- paths
        location ~ ^/stable-[a-zA-Z0-9]+ {
            # Enable WebSocket proxy
            proxy_pass http://127.0.0.1:8080;
            
            # Ensure WebSocket headers are set properly
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            proxy_set_header Origin "";

            # Optional: Set permissive CORS response headers
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Credentials true always;
            
            # Additional headers for better WebSocket support
            proxy_set_header Host $host;
            
            # Remove any proxy_redirect directives that might be interfering
            proxy_redirect off;
            
            # Disable any WebSocket checks to ensure all connections go through
            proxy_read_timeout 86400s;
        }

        # VS Code WebSocket specific endpoints
        location ~ ^/(vscode|socket\.io)/ {
            proxy_pass http://127.0.0.1:8080;
            
            # Ensure WebSocket headers are set
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }

        # Security Headers - still maintain but add conditionals to not interfere with WebSockets
        # add_header X-Frame-Options "DENY" always;
        # add_header X-Content-Type-Options "nosniff" always;
        # add_header X-XSS-Protection "1; mode=block" always;
    }
}