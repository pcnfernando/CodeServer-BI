# Configuration for code-server in Choreo
worker_processes  auto;  # Use auto to match CPU cores
pid        /tmp/nginx.pid;

events { worker_connections 1024; }

http {
    include    mime.types;
    sendfile on;

    # Simple log format suitable for stdout/stderr
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time" '
                    'upgrade="$http_upgrade" connection="$http_connection"';

    # Temporary paths for Choreo's read-only filesystem
    client_body_temp_path /tmp/client_temp;
    proxy_temp_path       /tmp/proxy_temp_path;
    fastcgi_temp_path     /tmp/fastcgi_temp;
    uwsgi_temp_path       /tmp/uwsgi_temp;
    scgi_temp_path        /tmp/scgi_temp;

    # Log to stdout/stderr for container logs
    access_log /dev/stdout main;
    error_log /dev/stderr info;

    # WebSocket support - more robust mapping
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # Use resolver to avoid startup issues
    resolver 127.0.0.11 ipv6=off;

    upstream codeserver {
        server 127.0.0.1:8080;
        # Use explicit IPv4 to avoid IPv6 [::1] connection issues
    }

    server {
        listen 8443;  # Match the exposed port in Dockerfile
        server_name _;  # Accept any hostname for dynamic assignment

        # Basic settings
        client_max_body_size 20M;
        
        # WebSocket proxy configuration
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Longer timeouts for WebSocket connections
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
        proxy_connect_timeout 300s;
        
        # Disable buffering for smoother WebSocket streaming
        proxy_buffering off;
        
        # Proxy settings for code-server
        location / {
            # Explicitly use IPv4 localhost instead of IPv6 [::1]
            proxy_pass http://127.0.0.1:8080;
        }

        # Specific location for WebSocket endpoints with dedicated logs
        location ~ ^/stable-[a-zA-Z0-9]+$ {
            # Explicitly use IPv4 localhost instead of IPv6 [::1]
            proxy_pass http://127.0.0.1:8080;
            
            # Ensure WebSocket headers are set
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }

        # VS Code WebSocket specific endpoints
        location ~ ^/vscode/[a-zA-Z0-9]+$ {
            # Explicitly use IPv4 localhost instead of IPv6 [::1]
            proxy_pass http://127.0.0.1:8080;
            
            # Ensure WebSocket headers are set
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }

        # VS Code WebSocket endpoint (socket.io)
        location ~ ^/socket.io/.*$ {
            # Explicitly use IPv4 localhost instead of IPv6 [::1]
            proxy_pass http://127.0.0.1:8080;
            
            # Ensure WebSocket headers are set
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }

        # Security Headers
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
    }
}