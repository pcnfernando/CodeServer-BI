# Configuration for code-server in Choreo
worker_processes  auto;  # Use auto to match CPU cores
pid        /tmp/nginx.pid;

# Enhanced logging format for debugging proxy and WebSocket issues
log_format proxy_log '[$time_local] $remote_addr - $remote_user - $server_name to: $upstream_addr: '
                      '$request $status upstream_response_time $upstream_response_time msec $msec request_time $request_time '
                      'upstream_status $upstream_status upstream_response_length $upstream_response_length '
                      'http_upgrade: "$http_upgrade" connection: "$http_connection"';

# WebSocket specific logs
log_format websocket '[$time_local] WEBSOCKET $remote_addr - $server_name - "$request" '
                      'Status: $status Upgrade: "$http_upgrade" Connection: "$connection_upgrade" '
                      'Request time: $request_time';

events { worker_connections 1024; }

http {
    include    mime.types;
    sendfile on;

    # Temporary paths for Choreo's read-only filesystem
    client_body_temp_path /tmp/client_temp;
    proxy_temp_path       /tmp/proxy_temp_path;
    fastcgi_temp_path     /tmp/fastcgi_temp;
    uwsgi_temp_path       /tmp/uwsgi_temp;
    scgi_temp_path        /tmp/scgi_temp;

    # Log to stdout/stderr for container logs
    access_log /dev/stdout proxy_log;
    error_log /dev/stderr debug;

    # WebSocket support - more robust mapping
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
        listen 8443;  # Match the exposed port in Dockerfile
        server_name _;  # Accept any hostname for dynamic assignment

        # Basic settings
        client_max_body_size 20M;
        
        # WebSocket proxy configuration
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Longer timeouts for WebSocket connections
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
        proxy_connect_timeout 300s;
        
        # Disable buffering for smoother WebSocket streaming
        proxy_buffering off;
        
        # Main logs directed to container stdout/stderr
        access_log /dev/stdout proxy_log;
        error_log /dev/stderr debug;
        
        # Proxy settings for code-server
        location / {
            # code-server typically runs on port 8080 internally
            proxy_pass http://localhost:8080;
        }

        # Specific location for WebSocket endpoints with dedicated logs
        location ~ ^/stable-[a-zA-Z0-9]+$ {
            proxy_pass http://localhost:8080;
            
            # Ensure WebSocket headers are set
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            # WebSocket logs to container stdout with websocket format
            access_log /dev/stdout websocket;
        }

        # VS Code WebSocket specific endpoints
        location ~ ^/vscode/[a-zA-Z0-9]+$ {
            proxy_pass http://localhost:8080;
            
            # Ensure WebSocket headers are set
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            # WebSocket logs to container stdout with websocket format
            access_log /dev/stdout websocket;
        }

        # VS Code WebSocket endpoint (socket.io)
        location ~ ^/socket.io/.*$ {
            proxy_pass http://localhost:8080;
            
            # Ensure WebSocket headers are set
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            # WebSocket logs to container stdout with websocket format
            access_log /dev/stdout websocket;
        }

        # Security Headers
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
    }
}